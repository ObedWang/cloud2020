server:
  port: 8802

spring:
  application:
    name: cloud-stream-consumer
  cloud:
    stream:
      binders: # 在此处配置要绑定的rabbitmq的服务信息；
        defaultKafka: # 表示定义的名称，用于于binding整合
          type: kafka # 消息组件类型
          environment: # 设置kafka的相关的环境配置
            spring:
              kafka:
                bootstrap-servers: localhost:9092
                consumer:
                  group-id: ${spring.application.name}
                  auto-offset-reset: earliest
#                  enable-auto-commit: false
#                  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#                  value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
                listener:
                  missing-topics-fatal: false
#                  ack-mode: manual_immediate
                producer:
                  acks: -1
#                  key-serializer: org.apache.kafka.common.serialization.StringSerializer  # 需要使用byteArraySerializer，要不然会报错
#                  value-serializer: org.apache.kafka.common.serialization.StringSerializer
      bindings: # 服务的整合处理
        input: # 这个名字是一个通道的名称
          destination: studyTopic # 表示要使用的Topic名称定义
          content-type: application/json # 设置消息类型，本次为json，文本则设置“text/plain”
          binder: defaultKafka  # 设置要绑定的消息服务的具体设置
          group: ${spring.application.name}
eureka:
  client: # 客户端进行Eureka注册的配置
    service-url:
      defaultZone: http://localhost:7001/eureka
  instance:
    lease-renewal-interval-in-seconds: 2 # 设置心跳的时间间隔（默认是30秒）
    lease-expiration-duration-in-seconds: 5 # 如果现在超过了5秒的间隔（默认是90秒）
    instance-id: receive-8802.com  # 在信息列表时显示主机名称
    prefer-ip-address: true     # 访问的路径变为IP地址

